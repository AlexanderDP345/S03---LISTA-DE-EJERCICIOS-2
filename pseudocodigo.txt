Objetivo: implementar PCA paso a paso y producir visualizaciones para Iris y un dataset real.

1. CARGAR DATOS
   - Si dataset == 'iris': cargar desde sklearn
   - Si dataset == 'real': leer CSV (ruta proporcionada por usuario)

2. PREPROCESAMIENTO
   - Imputar o eliminar filas con NaN (a elección)
   - Escalar características con StandardScaler (media 0, varianza 1)

3. MATRIZ DE COVARIANZA
   - C = cov(X_scaled, rowvar=False)

4. AUTOVALORES Y AUTOVECTORES
   - Usar np.linalg.eigh(C) (matriz simétrica)
   - Ordenar autovalores de mayor a menor y reorganizar autovectores

5. SELECCIÓN DE COMPONENTES
   - k = 2 por defecto (para graficar)
   - W = autovectores[:, :k]

6. TRANSFORMACIÓN
   - X_pca = X_scaled @ W

7. VARIANZA EXPLICADA
   - explained_ratio = eig_vals / sum(eig_vals)
   - varianza_acumulada = cumsum(explained_ratio)

8. VISUALIZACIONES
   - Scatter PC1 vs PC2 coloreado por clase si aplica
   - Scree plot con varianza acumulada

9. GUARDADO
   - Guardar figuras en `figures/` y opcionalmente X_pca.csv

Funciones mapeadas al código:
- load_dataset()
- preprocess(X)
- compute_pca(X, k)
- plot_pca_2d(X_pca, y)
- plot_scree(ratio)
